CREATE TABLE IF NOT EXISTS "migrations" ("id" integer primary key autoincrement not null, "migration" varchar not null, "batch" integer not null);
CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE IF NOT EXISTS "users" ("id" integer primary key autoincrement not null, "name" varchar not null, "email" varchar not null, "email_verified_at" datetime, "password" varchar not null, "remember_token" varchar, "created_at" datetime, "updated_at" datetime, "two_factor_secret" text, "two_factor_recovery_codes" text, "two_factor_confirmed_at" datetime);
CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");
CREATE TABLE IF NOT EXISTS "password_reset_tokens" ("email" varchar not null, "token" varchar not null, "created_at" datetime, primary key ("email"));
CREATE TABLE IF NOT EXISTS "sessions" ("id" varchar not null, "user_id" integer, "ip_address" varchar, "user_agent" text, "payload" text not null, "last_activity" integer not null, primary key ("id"));
CREATE INDEX "sessions_user_id_index" on "sessions" ("user_id");
CREATE INDEX "sessions_last_activity_index" on "sessions" ("last_activity");
CREATE TABLE IF NOT EXISTS "cache" ("key" varchar not null, "value" text not null, "expiration" integer not null, primary key ("key"));
CREATE TABLE IF NOT EXISTS "cache_locks" ("key" varchar not null, "owner" varchar not null, "expiration" integer not null, primary key ("key"));
CREATE TABLE IF NOT EXISTS "jobs" ("id" integer primary key autoincrement not null, "queue" varchar not null, "payload" text not null, "attempts" integer not null, "reserved_at" integer, "available_at" integer not null, "created_at" integer not null);
CREATE INDEX "jobs_queue_index" on "jobs" ("queue");
CREATE TABLE IF NOT EXISTS "job_batches" ("id" varchar not null, "name" varchar not null, "total_jobs" integer not null, "pending_jobs" integer not null, "failed_jobs" integer not null, "failed_job_ids" text not null, "options" text, "cancelled_at" integer, "created_at" integer not null, "finished_at" integer, primary key ("id"));
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer primary key autoincrement not null, "uuid" varchar not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime not null default CURRENT_TIMESTAMP);
CREATE UNIQUE INDEX "failed_jobs_uuid_unique" on "failed_jobs" ("uuid");
CREATE TABLE IF NOT EXISTS "courses" ("course_id" varchar not null, "course_name" varchar not null, "credits" integer, "course_type" varchar, primary key ("course_id"));
CREATE TABLE IF NOT EXISTS "instructors" ("instructor_id" varchar not null, "instructor_name" varchar not null, "preferred_slots" varchar, primary key ("instructor_id"));
CREATE TABLE IF NOT EXISTS "rooms" ("room_id" varchar not null, "room_type" varchar not null, "room_capacity" integer, primary key ("room_id"));
CREATE TABLE IF NOT EXISTS "qualified_courses" ("instructor_id" varchar not null, "course_id" varchar not null, foreign key("instructor_id") references "instructors"("instructor_id") on delete cascade, foreign key("course_id") references "courses"("course_id") on delete cascade);
CREATE TABLE IF NOT EXISTS "timetable" ("id" text, "day" text, "start_time" text, "end_time" text, "level" text, "room_id" varchar, "course_id" varchar, "instructor_id" varchar, foreign key("instructor_id") references "instructors"("instructor_id") on delete cascade, foreign key("course_id") references "courses"("course_id") on delete cascade, foreign key("room_id") references "rooms"("room_id") on delete cascade);
